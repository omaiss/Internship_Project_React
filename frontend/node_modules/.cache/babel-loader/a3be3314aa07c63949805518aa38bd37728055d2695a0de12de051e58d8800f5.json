{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omais\\\\Internship Works\\\\FirstTask\\\\my_app\\\\src\\\\components\\\\OTP.jsx\",\n  _s = $RefreshSig$();\nimport { styled } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = styled('input')({\n  border: '1px solid',\n  borderRadius: '5px',\n  fontSize: '25px',\n  width: '50px',\n  height: '50px',\n  textAlign: 'center',\n  margin: '10px',\n  '&::-webkit-outer-spin-button': {\n    WebkitAppearance: 'none',\n    margin: 0\n  },\n  '&::-webkit-inner-spin-button': {\n    WebkitAppearance: 'none',\n    margin: 0\n  },\n  '&[type=\"number\"]': {\n    MozAppearance: 'textfield'\n  }\n});\n_c = Input;\nconst ButtonA = styled('button')({\n  border: 'none',\n  color: '-webkit-link',\n  background: 'none',\n  fontSize: '15px',\n  textDecoration: 'underline',\n  cursor: 'pointer'\n});\n_c2 = ButtonA;\nexport default function OTP_UI({\n  email\n}) {\n  _s();\n  const [otp, setOTP] = useState(new Array(6).fill(\"\"));\n  const handleChange = (e, index) => {\n    if (isNaN(e.target.value)) return false;\n    setOTP([...otp.map((data, indx) => indx === index ? e.target.value : data)]);\n    if (e.target.value && e.target.nextSibling) {\n      e.target.nextSibling.focus();\n    }\n  };\n  const sendOTP = () => {\n    let otp = '';\n    for (let i = 0; i < 6; i++) {\n      otp += Math.floor(Math.random() * 10);\n    }\n    const templateParams = {\n      to_email: email,\n      otp_code: otp\n    };\n    emailjs.send('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', templateParams, 'YOUR_USER_ID').then(response => {\n      console.log('SUCCESS!', response.status, response.text);\n    }, error => {\n      console.log('FAILED...', error);\n    });\n  };\n  const checkOTP = () => {};\n  const resendOTP = () => {\n    sendOTP();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '22px',\n        fontFamily: 'Arial',\n        textAlign: 'center'\n      },\n      children: [\"Please enter the OTP sent you at \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: otp.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: 0,\n            max: 9,\n            required: true,\n            value: data,\n            onChange: e => handleChange(e, i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: '0',\n          marginTop: '20px',\n          padding: '15px',\n          borderRadius: '15px',\n          fontSize: '30px',\n          background: '#3333f3',\n          color: 'white',\n          width: '100%',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        onClick: checkOTP,\n        children: \"Verify \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [\"Didn't recieve a code?\", /*#__PURE__*/_jsxDEV(ButtonA, {\n        onClick: resendOTP,\n        children: \"Resend.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(OTP_UI, \"YMdK1O1ZGlQsvfaGBA8LlgeNT1I=\");\n_c3 = OTP_UI;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"ButtonA\");\n$RefreshReg$(_c3, \"OTP_UI\");","map":{"version":3,"names":["styled","React","useState","emailjs","jsxDEV","_jsxDEV","Fragment","_Fragment","Input","border","borderRadius","fontSize","width","height","textAlign","margin","WebkitAppearance","MozAppearance","_c","ButtonA","color","background","textDecoration","cursor","_c2","OTP_UI","email","_s","otp","setOTP","Array","fill","handleChange","e","index","isNaN","target","value","map","data","indx","nextSibling","focus","sendOTP","i","Math","floor","random","templateParams","to_email","otp_code","send","then","response","console","log","status","text","error","checkOTP","resendOTP","children","style","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","required","onChange","marginTop","padding","onClick","_c3","$RefreshReg$"],"sources":["C:/Users/Omais/Internship Works/FirstTask/my_app/src/components/OTP.jsx"],"sourcesContent":["import { styled } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport emailjs from 'emailjs-com';\r\n\r\nconst Input = styled('input')({\r\n    border: '1px solid',\r\n    borderRadius: '5px',\r\n    fontSize: '25px',\r\n    width: '50px',\r\n    height: '50px',\r\n    textAlign: 'center',\r\n    margin: '10px',\r\n    '&::-webkit-outer-spin-button': {\r\n        WebkitAppearance: 'none',\r\n        margin: 0,\r\n    },\r\n    '&::-webkit-inner-spin-button': {\r\n        WebkitAppearance: 'none',\r\n        margin: 0,\r\n    },\r\n    '&[type=\"number\"]': {\r\n        MozAppearance: 'textfield',\r\n    }\r\n})\r\n\r\nconst ButtonA = styled('button')({\r\n    border: 'none',\r\n    color: '-webkit-link',\r\n    background: 'none',\r\n    fontSize: '15px',\r\n    textDecoration: 'underline',\r\n    cursor: 'pointer'\r\n})\r\n\r\nexport default function OTP_UI({ email }) {\r\n    const [otp, setOTP] = useState(new Array(6).fill(\"\"))\r\n\r\n    const handleChange = (e, index) => {\r\n        if (isNaN(e.target.value)) return false;\r\n        setOTP([...otp.map((data, indx) => (indx === index ? e.target.value : data))])\r\n        if (e.target.value && e.target.nextSibling) {\r\n            e.target.nextSibling.focus()\r\n        }\r\n    }\r\n\r\n    const sendOTP = () => {\r\n        let otp = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            otp += Math.floor(Math.random() * 10);\r\n        }\r\n        const templateParams = {\r\n            to_email: email,\r\n            otp_code: otp,\r\n        };\r\n\r\n        emailjs.send('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', templateParams, 'YOUR_USER_ID')\r\n            .then((response) => {\r\n                console.log('SUCCESS!', response.status, response.text);\r\n            }, (error) => {\r\n                console.log('FAILED...', error);\r\n            });\r\n    }\r\n\r\n    const checkOTP = () => {\r\n\r\n    }\r\n\r\n    const resendOTP = () => {\r\n        sendOTP();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p style={{ fontSize: '22px', fontFamily: 'Arial', textAlign: 'center' }}>\r\n                Please enter the OTP sent you at {email}\r\n            </p>\r\n            <form>\r\n                <div>\r\n                    {otp.map((data, i) => {\r\n                        return <Input type=\"number\" min={0} max={9} required\r\n                            value={data} onChange={(e) => handleChange(e, i)} />\r\n                    })}\r\n                </div>\r\n                <button\r\n                    style={{\r\n                        margin: '0',\r\n                        marginTop: '20px',\r\n                        padding: '15px',\r\n                        borderRadius: '15px',\r\n                        fontSize: '30px',\r\n                        background: '#3333f3',\r\n                        color: 'white',\r\n                        width: '100%',\r\n                        border: 'none',\r\n                        cursor: 'pointer'\r\n                    }} onClick={checkOTP}>\r\n                    Verify </button>\r\n            </form>\r\n            <p style={{ textAlign: 'center' }}>Didn't recieve a code?\r\n                <ButtonA onClick={resendOTP}>\r\n                    Resend.\r\n                </ButtonA>\r\n            </p>\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}